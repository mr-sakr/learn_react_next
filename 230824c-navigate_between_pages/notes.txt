* You can change the extensions of pages files from js to be jsx,
so you will find vscode can make autocomplete and suggession for your tag and close it once you click enter.


* in the file of layout.js, you can find :
        export const metadata = {
            title: 'Create Next App',
            description: 'Generated by create next app',
        }
const metadata is very useful for SEO,
So, your website can be in front of the results of google search.


* In The file of layout, the function of RootLayout() you can change the place of {children},
and you can also add anything in the layout such as navbar, footer, ..etc.


* We can create a file in a name "layout.jsx" and Next.js will consider it automatically as the layout of the folder which include,
For example, if we have a folder "posts" and this folder includes many files, we can create an file in the name of "layout.js",
So this file will be a layout for all files in "posts" 

-----------------------

To make navigation between pages, I must import Link in the page of links or navbara as follows :

----> import Link from 'next/link'

Then write the link as follows :
    <Link href="/">Home</Link>
    <Link href="cats">Categories</Link>
    <Link href="posts">Posts</Link>

You will notice that we used Link component instead of a 
If we used a tag, the page will load as normal, but to avoid that we must use Link component.

We can use button inside Link.
    <Link href="/">
        <button>Home Page</button>
    </Link>




* We can make nested routes as we want, we can create folder in folder in folder the files like page.js, create.js and so on.


* Dynamic Route:
We may need to make a dynamic route, which use id of post for example.
The route will be /posts/21 
but 21 is id of a post, and there's not a file in the name of 21.js

to make this dynamic route, we need to create nested folder in posts folder in the name of [id],
And note that the name MUST be :
    1- inside []
    2- this name will be as the Path Parameter which will be in the link, 
And inside this folder, we must create a file in the name of "page.js"



To use it, we must path props object in the function, then call it as object has many params, so you will call the required params as follows :
    export default function Post(props){
        console.log(props.params.id);
        return(
            <div>
                This is Post id : {props.params.id}
            </div>
        )
    }

-----------------------------

Metadata

Metadata has many important data, 
You can change the page title by using it in any component,

    export const metadata = {
        title: 'Page Index'
    }

    export default function Post(props){
        return(
            <div>
                This is Post id : {props.params.id}
            </div>
        )
    }


